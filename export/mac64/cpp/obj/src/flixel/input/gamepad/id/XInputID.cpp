// Generated by Haxe 3.4.2
#include <hxcpp.h>

#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadAnalogStick
#include <flixel/input/gamepad/FlxGamepadAnalogStick.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_id_XInputID
#include <flixel/input/gamepad/id/XInputID.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_124_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",124,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_125_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",125,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_126_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",126,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_127_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",127,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_129_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",129,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_130_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",130,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_132_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",132,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_133_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",133,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_135_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",135,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_136_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",136,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_138_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",138,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_140_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",140,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_141_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",141,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_142_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",142,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_143_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",143,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_145_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",145,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_146_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",146,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_148_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",148,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_559677d855d318da_149_boot,"flixel.input.gamepad.id.XInputID","boot",0x5dbba0a3,"flixel.input.gamepad.id.XInputID.boot","flixel/input/gamepad/id/XInputID.hx",149,0x9958eee3)
namespace flixel{
namespace input{
namespace gamepad{
namespace id{

void XInputID_obj::__construct() { }

Dynamic XInputID_obj::__CreateEmpty() { return new XInputID_obj; }

void *XInputID_obj::_hx_vtable = 0;

Dynamic XInputID_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< XInputID_obj > _hx_result = new XInputID_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool XInputID_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x089bbefb;
}

int XInputID_obj::A;

int XInputID_obj::B;

int XInputID_obj::X;

int XInputID_obj::Y;

int XInputID_obj::LB;

int XInputID_obj::RB;

int XInputID_obj::LEFT_STICK_CLICK;

int XInputID_obj::RIGHT_STICK_CLICK;

int XInputID_obj::BACK;

int XInputID_obj::START;

int XInputID_obj::GUIDE;

int XInputID_obj::DPAD_UP;

int XInputID_obj::DPAD_DOWN;

int XInputID_obj::DPAD_LEFT;

int XInputID_obj::DPAD_RIGHT;

int XInputID_obj::LEFT_TRIGGER;

int XInputID_obj::RIGHT_TRIGGER;

 ::flixel::input::gamepad::FlxGamepadAnalogStick XInputID_obj::LEFT_ANALOG_STICK;

 ::flixel::input::gamepad::FlxGamepadAnalogStick XInputID_obj::RIGHT_ANALOG_STICK;


XInputID_obj::XInputID_obj()
{
}

bool XInputID_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"LEFT_ANALOG_STICK") ) { outValue = ( LEFT_ANALOG_STICK ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"RIGHT_ANALOG_STICK") ) { outValue = ( RIGHT_ANALOG_STICK ); return true; }
	}
	return false;
}

bool XInputID_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"LEFT_ANALOG_STICK") ) { LEFT_ANALOG_STICK=ioValue.Cast<  ::flixel::input::gamepad::FlxGamepadAnalogStick >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"RIGHT_ANALOG_STICK") ) { RIGHT_ANALOG_STICK=ioValue.Cast<  ::flixel::input::gamepad::FlxGamepadAnalogStick >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *XInputID_obj_sMemberStorageInfo = 0;
static hx::StaticInfo XInputID_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &XInputID_obj::A,HX_HCSTRING("A","\x41","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &XInputID_obj::B,HX_HCSTRING("B","\x42","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &XInputID_obj::X,HX_HCSTRING("X","\x58","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &XInputID_obj::Y,HX_HCSTRING("Y","\x59","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &XInputID_obj::LB,HX_HCSTRING("LB","\x76","\x42","\x00","\x00")},
	{hx::fsInt,(void *) &XInputID_obj::RB,HX_HCSTRING("RB","\xb0","\x47","\x00","\x00")},
	{hx::fsInt,(void *) &XInputID_obj::LEFT_STICK_CLICK,HX_HCSTRING("LEFT_STICK_CLICK","\x21","\x9d","\x4a","\xbf")},
	{hx::fsInt,(void *) &XInputID_obj::RIGHT_STICK_CLICK,HX_HCSTRING("RIGHT_STICK_CLICK","\x56","\x4c","\x25","\x0b")},
	{hx::fsInt,(void *) &XInputID_obj::BACK,HX_HCSTRING("BACK","\x27","\xa2","\xd1","\x2b")},
	{hx::fsInt,(void *) &XInputID_obj::START,HX_HCSTRING("START","\x42","\xac","\xf9","\x01")},
	{hx::fsInt,(void *) &XInputID_obj::GUIDE,HX_HCSTRING("GUIDE","\x9c","\xf2","\xd9","\x19")},
	{hx::fsInt,(void *) &XInputID_obj::DPAD_UP,HX_HCSTRING("DPAD_UP","\x6b","\x00","\x87","\xa2")},
	{hx::fsInt,(void *) &XInputID_obj::DPAD_DOWN,HX_HCSTRING("DPAD_DOWN","\x72","\x1a","\x5b","\x87")},
	{hx::fsInt,(void *) &XInputID_obj::DPAD_LEFT,HX_HCSTRING("DPAD_LEFT","\x17","\x2a","\x9d","\x8c")},
	{hx::fsInt,(void *) &XInputID_obj::DPAD_RIGHT,HX_HCSTRING("DPAD_RIGHT","\xac","\xb7","\xf4","\xf3")},
	{hx::fsInt,(void *) &XInputID_obj::LEFT_TRIGGER,HX_HCSTRING("LEFT_TRIGGER","\xa0","\x31","\xc6","\xeb")},
	{hx::fsInt,(void *) &XInputID_obj::RIGHT_TRIGGER,HX_HCSTRING("RIGHT_TRIGGER","\x55","\xe2","\x81","\x00")},
	{hx::fsObject /*::flixel::input::gamepad::FlxGamepadAnalogStick*/ ,(void *) &XInputID_obj::LEFT_ANALOG_STICK,HX_HCSTRING("LEFT_ANALOG_STICK","\x19","\x49","\x58","\xa5")},
	{hx::fsObject /*::flixel::input::gamepad::FlxGamepadAnalogStick*/ ,(void *) &XInputID_obj::RIGHT_ANALOG_STICK,HX_HCSTRING("RIGHT_ANALOG_STICK","\x44","\xe8","\xd6","\xb8")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void XInputID_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(XInputID_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(XInputID_obj::A,"A");
	HX_MARK_MEMBER_NAME(XInputID_obj::B,"B");
	HX_MARK_MEMBER_NAME(XInputID_obj::X,"X");
	HX_MARK_MEMBER_NAME(XInputID_obj::Y,"Y");
	HX_MARK_MEMBER_NAME(XInputID_obj::LB,"LB");
	HX_MARK_MEMBER_NAME(XInputID_obj::RB,"RB");
	HX_MARK_MEMBER_NAME(XInputID_obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(XInputID_obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(XInputID_obj::BACK,"BACK");
	HX_MARK_MEMBER_NAME(XInputID_obj::START,"START");
	HX_MARK_MEMBER_NAME(XInputID_obj::GUIDE,"GUIDE");
	HX_MARK_MEMBER_NAME(XInputID_obj::DPAD_UP,"DPAD_UP");
	HX_MARK_MEMBER_NAME(XInputID_obj::DPAD_DOWN,"DPAD_DOWN");
	HX_MARK_MEMBER_NAME(XInputID_obj::DPAD_LEFT,"DPAD_LEFT");
	HX_MARK_MEMBER_NAME(XInputID_obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_MARK_MEMBER_NAME(XInputID_obj::LEFT_TRIGGER,"LEFT_TRIGGER");
	HX_MARK_MEMBER_NAME(XInputID_obj::RIGHT_TRIGGER,"RIGHT_TRIGGER");
	HX_MARK_MEMBER_NAME(XInputID_obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_MARK_MEMBER_NAME(XInputID_obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#ifdef HXCPP_VISIT_ALLOCS
static void XInputID_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(XInputID_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(XInputID_obj::A,"A");
	HX_VISIT_MEMBER_NAME(XInputID_obj::B,"B");
	HX_VISIT_MEMBER_NAME(XInputID_obj::X,"X");
	HX_VISIT_MEMBER_NAME(XInputID_obj::Y,"Y");
	HX_VISIT_MEMBER_NAME(XInputID_obj::LB,"LB");
	HX_VISIT_MEMBER_NAME(XInputID_obj::RB,"RB");
	HX_VISIT_MEMBER_NAME(XInputID_obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(XInputID_obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(XInputID_obj::BACK,"BACK");
	HX_VISIT_MEMBER_NAME(XInputID_obj::START,"START");
	HX_VISIT_MEMBER_NAME(XInputID_obj::GUIDE,"GUIDE");
	HX_VISIT_MEMBER_NAME(XInputID_obj::DPAD_UP,"DPAD_UP");
	HX_VISIT_MEMBER_NAME(XInputID_obj::DPAD_DOWN,"DPAD_DOWN");
	HX_VISIT_MEMBER_NAME(XInputID_obj::DPAD_LEFT,"DPAD_LEFT");
	HX_VISIT_MEMBER_NAME(XInputID_obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_VISIT_MEMBER_NAME(XInputID_obj::LEFT_TRIGGER,"LEFT_TRIGGER");
	HX_VISIT_MEMBER_NAME(XInputID_obj::RIGHT_TRIGGER,"RIGHT_TRIGGER");
	HX_VISIT_MEMBER_NAME(XInputID_obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_VISIT_MEMBER_NAME(XInputID_obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#endif

hx::Class XInputID_obj::__mClass;

static ::String XInputID_obj_sStaticFields[] = {
	HX_HCSTRING("A","\x41","\x00","\x00","\x00"),
	HX_HCSTRING("B","\x42","\x00","\x00","\x00"),
	HX_HCSTRING("X","\x58","\x00","\x00","\x00"),
	HX_HCSTRING("Y","\x59","\x00","\x00","\x00"),
	HX_HCSTRING("LB","\x76","\x42","\x00","\x00"),
	HX_HCSTRING("RB","\xb0","\x47","\x00","\x00"),
	HX_HCSTRING("LEFT_STICK_CLICK","\x21","\x9d","\x4a","\xbf"),
	HX_HCSTRING("RIGHT_STICK_CLICK","\x56","\x4c","\x25","\x0b"),
	HX_HCSTRING("BACK","\x27","\xa2","\xd1","\x2b"),
	HX_HCSTRING("START","\x42","\xac","\xf9","\x01"),
	HX_HCSTRING("GUIDE","\x9c","\xf2","\xd9","\x19"),
	HX_HCSTRING("DPAD_UP","\x6b","\x00","\x87","\xa2"),
	HX_HCSTRING("DPAD_DOWN","\x72","\x1a","\x5b","\x87"),
	HX_HCSTRING("DPAD_LEFT","\x17","\x2a","\x9d","\x8c"),
	HX_HCSTRING("DPAD_RIGHT","\xac","\xb7","\xf4","\xf3"),
	HX_HCSTRING("LEFT_TRIGGER","\xa0","\x31","\xc6","\xeb"),
	HX_HCSTRING("RIGHT_TRIGGER","\x55","\xe2","\x81","\x00"),
	HX_HCSTRING("LEFT_ANALOG_STICK","\x19","\x49","\x58","\xa5"),
	HX_HCSTRING("RIGHT_ANALOG_STICK","\x44","\xe8","\xd6","\xb8"),
	::String(null())
};

void XInputID_obj::__register()
{
	hx::Object *dummy = new XInputID_obj;
	XInputID_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.input.gamepad.id.XInputID","\x9d","\x99","\x2b","\xc4");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &XInputID_obj::__GetStatic;
	__mClass->mSetStaticField = &XInputID_obj::__SetStatic;
	__mClass->mMarkFunc = XInputID_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(XInputID_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< XInputID_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = XInputID_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = XInputID_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = XInputID_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void XInputID_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_124_boot)
HXDLIN( 124)		A = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_125_boot)
HXDLIN( 125)		B = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_126_boot)
HXDLIN( 126)		X = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_127_boot)
HXDLIN( 127)		Y = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_129_boot)
HXDLIN( 129)		LB = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_130_boot)
HXDLIN( 130)		RB = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_132_boot)
HXDLIN( 132)		LEFT_STICK_CLICK = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_133_boot)
HXDLIN( 133)		RIGHT_STICK_CLICK = (int)7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_135_boot)
HXDLIN( 135)		BACK = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_136_boot)
HXDLIN( 136)		START = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_138_boot)
HXDLIN( 138)		GUIDE = (int)10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_140_boot)
HXDLIN( 140)		DPAD_UP = (int)11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_141_boot)
HXDLIN( 141)		DPAD_DOWN = (int)12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_142_boot)
HXDLIN( 142)		DPAD_LEFT = (int)13;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_143_boot)
HXDLIN( 143)		DPAD_RIGHT = (int)14;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_145_boot)
HXDLIN( 145)		LEFT_TRIGGER = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_559677d855d318da_146_boot)
HXDLIN( 146)		RIGHT_TRIGGER = (int)5;
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_559677d855d318da_148_boot)
HXDLIN( 148)		LEFT_ANALOG_STICK =  ::flixel::input::gamepad::FlxGamepadAnalogStick_obj::__alloc( HX_CTX ,(int)0,(int)1, ::Dynamic(hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),(int)24)
            			->setFixed(1,HX_("up",5b,66,00,00),(int)21)
            			->setFixed(2,HX_("down",62,f8,6d,42),(int)22)
            			->setFixed(3,HX_("left",07,08,b0,47),(int)23)));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_559677d855d318da_149_boot)
HXDLIN( 149)		RIGHT_ANALOG_STICK =  ::flixel::input::gamepad::FlxGamepadAnalogStick_obj::__alloc( HX_CTX ,(int)3,(int)4, ::Dynamic(hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),(int)28)
            			->setFixed(1,HX_("up",5b,66,00,00),(int)25)
            			->setFixed(2,HX_("down",62,f8,6d,42),(int)26)
            			->setFixed(3,HX_("left",07,08,b0,47),(int)27)));
            	}
}

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace id
